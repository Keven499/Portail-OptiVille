@using System.ComponentModel.DataAnnotations

<EditForm Model="@telephoneIdentidication" OnValidSubmit="HandleValidSubmit">
    <div class="py-2 col-lg-12 col-xl-12 titre-bold fs-4"><i class="bi bi-braces-asterisk text-danger"></i> Téléphone @TelephoneNumber</div>
    <div class="pb-2 d-flex justify-content-between">
        <div class="col-lg-3 col-xl-3">
            <label class="bleuFonce texte-bold" for="typeTel"><i class="bi bi-braces-asterisk text-danger"></i> Type</label>
            <InputSelect class="form-control input-bleu texte-light" id="typeTel" @oninput="ValidateInputs" @bind-Value="telephoneIdentidication.typeTelEntreprise">
                <option value="" disabled selected>Veuillez choisir un type</option>
                @foreach (string type in listeTypeContact)
                {
                    <option value="@type">@type</option>
                }
            </InputSelect>
            @if (isSubmitted && !isTypeTelEntrValid)
            {
                <span class="input-group-text text-danger">
                    <i class="bi bi-x-circle me-2"></i>
                    <span class="texte-medium">Type requis</span>
                </span>
            }
            else if (isSubmitted && isTypeTelEntrValid)
            {
                <span class="input-group-text text-success">
                    <i class="bi bi-check-circle me-2"></i>
                    <span class="texte-medium">Valide</span>
                </span>
            }
        </div>
        <div class="col-lg-6 col-xl-6 ms-1 me-1">
            <label class="bleuFonce texte-bold" for="NoTel"><i class="bi bi-braces-asterisk text-danger"></i> Numéro de téléphone</label>
            <InputNumber TValue="long?" @oninput="ValidateInputs" @bind-Value="telephoneIdentidication.noTelEntreprise" class="form-control input-bleu texte-light" id="NoTel" />
            @if (isSubmitted && !isNoTelEntrValid)
            {
                <span class="input-group-text text-danger">
                    <i class="bi bi-x-circle me-2"></i>
                    @if (!(telephoneIdentidication.noTelEntreprise.HasValue))
                    {
                        <span class="texte-medium">Téléphone requis</span>
                    }
                    else if (telephoneIdentidication.noTelEntreprise != 10)
                    {
                        <span class="texte-medium">Doit contenir 10 numéros</span>
                    }
                </span>
            }
            else if (isSubmitted && isNoTelEntrValid)
            {
                <span class="input-group-text text-success">
                    <i class="bi bi-check-circle me-2"></i>
                    <span class="texte-medium">Valide</span>
                </span>
            }
        </div>
        <div class="col-lg-3 col-xl-3">
            <label class="bleuFonce texte-bold" for="PosteCoordo"><i class="bi bi-braces text-success"></i> Poste</label>
            <InputNumber TValue="long?" @oninput="ValidateInputs" @bind-Value="telephoneIdentidication.posteTelEntreprise" class="form-control input-bleu texte-light" id="PosteCoordo" />
            @if (isSubmitted && !isPosteTelEntrValid && telephoneIdentidication.posteTelEntreprise.HasValue)
            {
                <span class="input-group-text text-danger">
                    <i class="bi bi-x-circle me-2"></i>
                    <span class="texte-medium">Doit contenir 6 numéros</span>
                </span>
            }
            else if (isSubmitted && isPosteTelEntrValid && telephoneIdentidication.posteTelEntreprise.HasValue)
            {
                <span class="input-group-text text-success">
                    <i class="bi bi-check-circle me-2"></i>
                    <span class="texte-medium">Valide</span>
                </span>
            }
        </div>
    </div>
    <div>
        <button type="submit" class="btn bg-bleu text-white texte-bold w-100" @onclick="SubmitForm">Valider le téléphone</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int TelephoneNumber { get; set; } = 1;
    private bool isSubmitted = false;
    private bool isTypeTelEntrValid = true;
    private bool isNoTelEntrValid = true;
    private bool isPosteTelEntrValid = true;
    private TelephoneIdentidication telephoneIdentidication = new TelephoneIdentidication();
    private List<string> listeTypeContact = new List<string> { "Bureau", "Télécopieur", "Cellulaire" };

    public void HandleValidSubmit()
    {
       
    }

     private void SubmitForm()
    {
        isSubmitted = true;      
        ValidateInputs();
    }

    private void ValidateInputs()
    {
        // Type tel adresse
        if (!string.IsNullOrEmpty(telephoneIdentidication.typeTelEntreprise))
        {
            isTypeTelEntrValid = true;
        }
        else
        {
            isTypeTelEntrValid = false;
        }

        // Numéro tel
        // Vide
        if (!telephoneIdentidication.noTelEntreprise.HasValue)
        {
            isNoTelEntrValid = false;
        }
        // Invalide si hors plage
        else if (!(telephoneIdentidication.noTelEntreprise >= 1100000000 && telephoneIdentidication.noTelEntreprise <= 8899999999))
        {
            isNoTelEntrValid = false;
        }
        else
        {
            isNoTelEntrValid = true;
        }

        // Poste tel
        // Vide
        if (!telephoneIdentidication.posteTelEntreprise.HasValue)
        {
            isPosteTelEntrValid = false;
        }
        // Invalide si hors plage
        else if (!(telephoneIdentidication.posteTelEntreprise >= 000000 && telephoneIdentidication.posteTelEntreprise <= 999999))
        {
            isPosteTelEntrValid = false;
        }
        else
        {
            isPosteTelEntrValid = true;
        }
        StateHasChanged();
    }

    public class TelephoneIdentidication
    {
        [Required]
        public string? typeTelEntreprise { get; set; }

        [Required]
        [RegularExpression(@"^\d{10}$")]
        public long? noTelEntreprise { get; set; }

        [RegularExpression(@"^\d{6}$")]
        public long? posteTelEntreprise { get; set; }
    }
}