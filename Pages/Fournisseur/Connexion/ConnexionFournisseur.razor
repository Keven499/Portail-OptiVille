@page "/Connexion"
@using System.ComponentModel.DataAnnotations
<EditForm Model="@logInModel" OnValidSubmit="HandleValidSubmit">
    <!-- OnValidSubmit="HandleValidSubmit" -->
    <div class="form-group container-fluid h-100 w-100 d-flex align-items-center justify-content-center">
        <div class="row h-100 w-100 d-flex align-items-center justify-content-center">
            <div class="card w-75 h-75 d-flex justify-content-center p-0 m-0">

                @* Identification *@
                <div class="card-header py-2 bg-bleuFonce">
                    <h3 class="py-2 p-0 my-0 text-white titre-bold">Identification</h3>
                </div>
                <div class="card-body border-bleuFonce py-1">
                    <div class="col-xl-12 col-lg-12 py-2">
                        <label class="bleuFonce texte-bold" for="Courriel">
                            <i class="bi @GetEmailIcon()"></i> Courriel
                        </label>
                        <InputText type="Email" class="form-control" id="Courriel" @bind-Value="logInModel.Courriel" />
                        @*Affichage de l'erreur*@
                        <ValidationMessage For="@(() => logInModel.Courriel)" />
                    </div>

                    <div class="col-xl-12 col-lg-12 py-2">
                        <label class="bleuFonce texte-bold" for="MotDePasse"><i class="bi bi-key text-success"></i> Mot de passe</label>
                        <InputText type="password" class="form-control" id="MotDePasse" @bind-Value="logInModel.MotDePasse" />
                        @* @if (isSubmitted && identificationModel.MotDePasse.Length < 8)
                        {
                            <span class="input-group-text text-danger">
                                <i class="bi bi-x-circle me-2"></i>
                                <span class="texte-medium">Le mot de passe doit contenir au moins 8 caractères</span>
                            </span>
                        }
                        else if (isSubmitted && identificationModel.MotDePasse.Length >= 8)
                        {
                            <span class="input-group-text text-success">
                                <i class="bi bi-check-circle me-2"></i>
                                <span class="texte-medium">Valide</span>
                            </span>
                        } *@
                    </div>
                </div>

                <div class="card-footer py-2 bg-bleuFonce">
                    <button type="submit" class="btn btn-success w-100">Connexion</button>
                </div>
            </div>
        </div>
    </div>
    <DataAnnotationsValidator />
</EditForm>
@code{

    private LogInModel logInModel = new LogInModel();

    private void HandleValidSubmit()
    {
        Console.WriteLine("Soumis");
    }

    private string emailIconClass = "bi-braces text-success"; // Par défaut

    private void ValidateEmail(ChangeEventArgs e)
    {
        if (IsValidEmail(logInModel.Courriel))
        {
            emailIconClass = "bi-check-circle text-success"; // Valide
        }
        else
        {
            emailIconClass = "bi-x-circle text-danger"; // Invalide
        }
    }

    private bool IsValidEmail(string email)
    {
        // Simple validation, tu peux utiliser des expressions régulières pour plus de précision
        return !string.IsNullOrEmpty(email) && email.Contains("@") && email.Contains(".");
    }

    private string GetEmailIcon()
    {
        return emailIconClass;
    }

    public class LogInModel
    {
        [Required(ErrorMessage = "Le courriel est requis")]
        [EmailAddress(ErrorMessage = "Le courriel n'est pas valide")]
        public string Courriel { get; set; }

        [Required(ErrorMessage = "Le mot de passe est requis")]
        public string MotDePasse { get; set; }
    }
}