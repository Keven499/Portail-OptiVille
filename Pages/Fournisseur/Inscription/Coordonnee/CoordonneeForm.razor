@using Portail_OptiVille.Data.FormModels
@using System.Text.RegularExpressions

<style>
    .invalid {
        outline: 1px solid red;
    }
    .valid {
        outline: 1px solid #26b050;
    }
</style>

<PageTitle>Étape 2 Coordonnées</PageTitle>
<EditForm Model="@CoordonneeFormModel">
    <div class="card-header py-2 bg-bleuFonce">
        <h3 class="py-2 p-0 my-0 text-white titre-bold">Coordonnées de l'entreprise</h3>
    </div>
        <div class="card-body border-bleuFonce bg-blanc py-1">
            <div class="py-2 d-flex justify-content-between">
                <div class="col-xl-3 col-lg-3 col-3 col-sm-3">
                    <label class="bleuFonce texte-bold" for="No">No <i class="bi bi-braces-asterisk text-danger"></i></label>
                    <input type="text" @bind="CoordonneeFormModel.NoEntreprise" maxlength="8" class="form-control @(isErrorNo ? "invalid" : (isGoodNo ? "valid" : "")) input-bleu texte-light" id="No" />
                    @if (isErrorNo)
                    {
                        <span class="input-group-text text-danger">
                            <i class="bi bi-x-circle me-2"></i>
                            <span class="texte-medium">@NoErrorMessage</span>
                        </span>
                    }
                    @if (isGoodNo)
                    {
                        <span class="input-group-text text-success">
                            <i class="bi bi-check-circle me-2"></i>
                            <span class="texte-medium">Valide</span>
                        </span>
                    }
                </div>
                <div class="col-xl-6 col-lg-6 col-6 col-sm-6 ms-1 me-1">
                    <label class="bleuFonce texte-bold" for="Rue">Rue <i class="bi bi-braces-asterisk text-danger"></i></label>
                    <input type="text" @bind="CoordonneeFormModel.RueEntreprise" maxlength="64" class="form-control @(isErrorRue ? "invalid" : (isGoodRue ? "valid" : "")) input-bleu texte-light" id="Rue" />
                    @if (isErrorRue)
                    {
                        <span class="input-group-text text-danger">
                            <i class="bi bi-x-circle me-2"></i>
                            <span class="texte-medium">@RueErrorMessage</span>
                        </span>
                    }
                    @if (isGoodRue)
                    {
                        <span class="input-group-text text-success">
                            <i class="bi bi-check-circle me-2"></i>
                            <span class="texte-medium">Valide</span>
                        </span>
                    }
                </div>
                <div class="col-xl-3 col-lg-3 col-3 col-sm-3">
                    <label class="bleuFonce texte-bold" for="Bureau">Bureau <i class="bi bi-braces text-success"></i></label>
                    <input type="text" @bind="CoordonneeFormModel.BureauEntreprise" maxlength="8" class="form-control @(isErrorBureau ? "invalid" : (isGoodBureau ? "valid" : "")) input-bleu texte-light" id="Bureau" />
                    @if (isErrorBureau)
                    {
                        <span class="input-group-text text-danger">
                            <i class="bi bi-x-circle me-2"></i>
                            <span class="texte-medium">@BureauErrorMessage</span>
                        </span>
                    }
                    @if (isGoodBureau)
                    {
                        <span class="input-group-text text-success">
                            <i class="bi bi-check-circle me-2"></i>
                            <span class="texte-medium">Valide</span>
                        </span>
                    }
                </div>
            </div>
            <div class="col-xl-12 col-lg-12 col-12 col-sm-12 py-2">
                <label class="bleuFonce texte-bold" for="Ville">Ville <i class="bi bi-braces-asterisk text-danger"></i></label>
                <input type="text" @bind="CoordonneeFormModel.VilleEntreprise" maxlength="8" class="form-control @(isErrorVille ? "invalid" : (isGoodVille ? "valid" : "")) input-bleu texte-light" id="Ville" />
                @if (isErrorVille)
                {
                    <span class="input-group-text text-danger">
                        <i class="bi bi-x-circle me-2"></i>
                        <span class="texte-medium">@VilleErrorMessage</span>
                    </span>
                }
                @if (isGoodVille)
                {
                    <span class="input-group-text text-success">
                        <i class="bi bi-check-circle me-2"></i>
                        <span class="texte-medium">Valide</span>
                    </span>
                }
            </div>
            <div class="col-xl-12 col-lg-12 col-12 col-sm-12 py-2">
                <label class="bleuFonce texte-bold" for="Province">Province <i class="bi bi-braces-asterisk text-danger"></i></label>
                <select class="form-control @(isErrorProvince ? "invalid" : (isGoodProvince ? "valid" : "")) form-select input-bleu texte-light" id="Province" @bind="CoordonneeFormModel.ProvinceEntreprise">
                    <option value="" disabled selected>Veuillez choisir une province</option>
                    @foreach (string province in listeProvinces)
                    {
                        <option value="@province">@province</option>
                    }
                </select>
                @if (isErrorProvince)
                {
                    <span class="input-group-text text-danger">
                        <i class="bi bi-x-circle me-2"></i>
                        <span class="texte-medium">@ProvinceErrorMessage</span>
                    </span>
                }
                @if (isGoodProvince)
                {
                    <span class="input-group-text text-success">
                        <i class="bi bi-check-circle me-2"></i>
                        <span class="texte-medium">Valide</span>
                    </span>
                } 
            </div>
            <div class="col-xl-12 col-lg-12 col-12 col-sm-12 py-2">
                <label class="bleuFonce texte-bold" for="CodePostal">Code Postal <i class="bi bi-braces-asterisk text-danger"></i></label>
                <input type="text" @bind="CoordonneeFormModel.CodePostalEntreprise" class="form-control @(isErrorCP ? "invalid" : (isGoodCP ? "valid" : "")) input-bleu texte-light" id="CodePostal" />
                @if (isErrorCP)
                {
                    <span class="input-group-text text-danger">
                        <i class="bi bi-x-circle me-2"></i>
                        <span class="texte-medium">@CPErrorMessage</span>
                    </span>
                }
                @if (isGoodCP)
                {
                    <span class="input-group-text text-success">
                        <i class="bi bi-check-circle me-2"></i>
                        <span class="texte-medium">Valide</span>
                    </span>
                }
            </div>                    
            <div class="col-lg-12 col-xl-12 col-12 col-sm-12 py-2">
                <label class="bleuFonce texte-bold" for="RegionAdm">Région Admnistrative <i class="bi bi-braces-asterisk text-danger"></i></label>
                <select id="RegionAdm" @bind="CoordonneeFormModel.RegionAdmEntreprise" class="form-control @(isErrorRegion ? "invalid" : (isGoodRegion ? "valid" : "")) form-select input-bleu texte-light">
                    <option value="" disabled selected>Veuillez choisir une région administrative</option>
                    @foreach (string region in listeRegionADM)
                    {
                        <option value="@region">@region</option>
                    }
                </select>
                @if (isErrorRegion)
                {
                    <span class="input-group-text text-danger">
                        <i class="bi bi-x-circle me-2"></i>
                        <span class="texte-medium">@RegionErrorMessage</span>
                    </span>
                }
                @if (isGoodRegion)
                {
                    <span class="input-group-text text-success">
                        <i class="bi bi-check-circle me-2"></i>
                        <span class="texte-medium">Valide</span>
                    </span>
                }
            </div>
            <div class="col-lg-12 col-xl-12 col-12 col-sm-12 py-2">
                <label class="bleuFonce texte-bold" for="SiteWeb">Site Internet <i class="bi bi-braces text-success"></i></label>
                <input type="text" @bind="CoordonneeFormModel.SiteWebEntreprise" maxlength="64" class="form-control @(isErrorSite ? "invalid" : (isGoodSite ? "valid" : "")) input-bleu texte-light" id="SiteWeb" />
                @if (isErrorSite)
                {
                    <span class="input-group-text text-danger">
                        <i class="bi bi-x-circle me-2"></i>
                        <span class="texte-medium">@SiteErrorMessage</span>
                    </span>
                }
                @if (isGoodSite)
                {
                    <span class="input-group-text text-success">
                        <i class="bi bi-check-circle me-2"></i>
                        <span class="texte-medium">Valide</span>
                    </span>
                }
            </div>
            <Telephone TelephoneNumber="1" />
            @foreach (var telephoneNumber in telephoneList)
            {
                <Telephone TelephoneNumber="@telephoneNumber" />                
            }
            <div class="d-flex justify-content-center py-2">
                <button type="button" class="btn bg-success text-white texte-bold me-2" @onclick="AddTelephone" style="width: 200px;"><i class="bi bi-plus-circle"></i> Ajout téléphone</button>
                <button type="button" class="btn bg-danger text-white texte-bold" @onclick="RemoveTelephone" style="width: 200px;" disabled="@(!telephoneList.Any())"><i class="bi bi-trash"></i> Retirer téléphone</button>
            </div>
        </div>
</EditForm>

@code {
    [Parameter]
    public Action<CoordonneeForm>? AssignReference { get; set; }
    [Parameter]
    public CoordonneeFormModel CoordonneeFormModel { get; set; }
    private string? NoErrorMessage;
    private string? RueErrorMessage;
    private string? BureauErrorMessage;
    private string? VilleErrorMessage;
    private string? ProvinceErrorMessage;
    private string? CPErrorMessage;
    private string? RegionErrorMessage;
    private string? SiteErrorMessage;
    private List<int> telephoneList = new List<int>();
    private int telephoneCounter = 1;
    private bool isErrorNo = false;
    private bool isGoodNo = false;
    private bool isErrorRue = false;
    private bool isGoodRue = false;
    private bool isErrorBureau = false;
    private bool isGoodBureau = false;
    private bool isErrorVille = false;
    private bool isGoodVille = false;
    private bool isErrorProvince = false;
    private bool isGoodProvince = false;
    private bool isErrorCP = false;
    private bool isGoodCP = false;
    private bool isErrorRegion = false;
    private bool isGoodRegion = false;
    private bool isErrorSite = false;
    private bool isGoodSite = false;

    private List<string> listeProvinces = new List<string>{"Québec", "Ontario", "Manitoba", "Saskatchewan", "Alberta", "Colombie-Britanique",
        "Île-du-Prince-Édouard", "Nouveau-Brunswick", "Nouvelle-Écosse", "Terre-Neuve-et-Labrador", "Nunavut", "Territoires du Nord-Ouest",
        "Yukon"};
    private List<string> listeRegionADM = new List<string>{"(01) Bas-Saint-Laurent", "(02) Saguenay-Lac-Saint-Jean", "(03) Capitale-Nationale",
        "(04) Mauricie", "(05) Estrie", "(06) Montréal", "(07) Outaouais", "(08) Abitibi-Témiscamingue", "(09) Côte-Nord", "(10) Nord-du-Québec",
        "(11) Gaspésie-Îles-de-la-Madeleine", "(12) Chaudière-Appalaches", "(13) Laval", "(14) Lanaudière", "(15) Laurentides", "(16) Montérégie",
        "(17) Centre-du-Québec"};

    protected override void OnInitialized()
    {
        AssignReference?.Invoke(this);
    }

    private void AddTelephone()
    {
        telephoneCounter++;
        if (telephoneCounter <= 5) {
            telephoneList.Add(telephoneCounter);
        }
    }

    private void RemoveTelephone()
    {
        if (telephoneList.Any())
        {
            telephoneList.RemoveAt(telephoneList.Count - 1);
            telephoneCounter--;
        }
    }

    public bool ValidateForm()
    {
        bool isValid = true;
        if (!string.IsNullOrEmpty(CoordonneeFormModel.NoEntreprise))
        {
            if (!Regex.IsMatch(CoordonneeFormModel.NoEntreprise, @"^(\d{1,5}[A-Z]?)\s*(½?)$")) {
                isErrorNo = true;
                isGoodNo = false;
                NoErrorMessage = "Mauvais format";
                isValid = false;
            }
            else {
                isErrorNo = false;
                isGoodNo = true; 
            }
        }
        else
        {
            isErrorNo = true;
            isGoodNo = false;
            NoErrorMessage = "Numéro requis";
            isValid = false;
        }

        if (!string.IsNullOrEmpty(CoordonneeFormModel.RueEntreprise))
        {
            isGoodRue = true;
            isErrorRue = false;
        }
        else
        {
            isErrorRue = true;
            isGoodRue = false;
            RueErrorMessage = "Rue requise";
            isValid = false;
        }

        if (!string.IsNullOrEmpty(CoordonneeFormModel.BureauEntreprise))
        {
            isGoodBureau = true;
            isErrorBureau = false;
        }

        if (!string.IsNullOrEmpty(CoordonneeFormModel.VilleEntreprise))
        {
            isGoodVille = true;
            isErrorVille = false;
        }
        else
        {
            isErrorVille = true;
            isGoodVille = false;
            VilleErrorMessage = "Ville requise";
            isValid = false;
        }

        if (!string.IsNullOrEmpty(CoordonneeFormModel.ProvinceEntreprise))
        {
            isGoodProvince = true;
            isErrorProvince = false;
        }
        else
        {
            isErrorProvince = true;
            isGoodProvince = false;
            ProvinceErrorMessage = "Province requise";
            isValid = false;
        }

        if (!string.IsNullOrEmpty(CoordonneeFormModel.CodePostalEntreprise))
        {
            if (CoordonneeFormModel.CodePostalEntreprise.Length != 6) {
                isErrorCP = true;
                CPErrorMessage = "Doit contenir 6 caractère";
                isGoodCP = false;
                isValid = false;
            }
            else {
                if (!Regex.IsMatch(CoordonneeFormModel.CodePostalEntreprise, @"^[A-z]{1}[\d]{1}[A-z]{1}[\d]{1}[A-z]{1}[\d]{1}$")) {
                    isErrorCP = true;
                    CPErrorMessage = "Mauvais format";
                    isGoodCP = false;
                    isValid = false;
                }
                else {
                    isGoodCP = true;
                    isErrorCP = false;
                }
            }
        }
        else {
            isErrorCP = true;
            CPErrorMessage = "Code postal requis";
            isGoodCP = false;
            isValid = false;
        }

        if (!string.IsNullOrEmpty(CoordonneeFormModel.RegionAdmEntreprise))
        {
            isGoodRegion = true;
            isErrorRegion = false;
        }
        else
        {
            isErrorRegion = true;
            RegionErrorMessage = "Région requise";
            isGoodRegion = false;
            isValid = false;
        }

        if (!string.IsNullOrEmpty(CoordonneeFormModel.SiteWebEntreprise))
        {
            isGoodSite = true;
            isErrorSite = false;
        }

        return isValid;
    }
}