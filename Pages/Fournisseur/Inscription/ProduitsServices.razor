@page "/productService"
@using Microsoft.EntityFrameworkCore
@using Portail_OptiVille.Data.Models
@using System.ComponentModel.DataAnnotations
@inject A2024420517riGr1Eq6Context _context

<PageTitle>Produits et services</PageTitle>

<style>
    ::-webkit-scrollbar {
        width: 6px;
    }
    ::-webkit-scrollbar-track {
        background: #f1f1f1;
    }
    ::-webkit-scrollbar-thumb {
        background: rgb(120, 198, 224);
    }
    ::-webkit-scrollbar-thumb:hover {
        background: rgb(11, 35, 65);
    }
    .custom-checkbox:before {
        content: '';
        position: absolute;
        left: 6px;
        top: 2px;
        width: 6px;
        height: 12px;
        border: solid white;
        border-width: 0 2px 2px 0;
        transform: rotate(45deg);
        opacity: 0;
    }
    input[type="checkbox"]:checked+.custom-checkbox:before {
        opacity: 1;
    }
    input[type="checkbox"]:checked+.custom-checkbox {
        background-color: rgb(11, 35, 65);
    }
    .custom-checkbox {
        display: block;
        width: 20px;
        flex-shrink: 0;
        margin-right: 3px;
        height: 20px;
        background-color: rgb(120, 198, 224);
        border: 1px solid rgb(11, 35, 65);
        border-radius: 3px;
        position: relative;
        cursor: pointer;
        vertical-align: middle;
    }
    input[type="checkbox"] {
        opacity: 0;
        position: absolute;
        width: 0;
        height: 0;
    }
    input[type="checkbox"] {
        opacity: 0;
        position: absolute;
        width: 0;
        height: 0;
    }
    .overflow-auto {
        height: 192px;
        padding: 4px;
        width: 100%;
    }
    .litteStrong {
        margin-right: 4px;
        font-size: 14px;
    }
</style>

<EditForm Model="@formModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
<div class="form-group container-fluid h-100 w-100 d-flex align-items-center justify-content-center">
    <div class="row h-100 w-100 d-flex align-items-center justify-content-center">
        <div class="card w-75 h-75 d-flex justify-content-center p-0 m-0">
            <div class="card-header py-2 bg-bleuFonce">
                <h3 class="py-2 p-0 my-0  text-white">Produits et services</h3>
            </div>
            <div class="card-body py-1">
                <div class="row">
                    <div class="col py-2">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Search...">
                            <button class="btn btn-outline-secondary" type="button">
                                <i class="bi bi-search"></i>
                            </button>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col py-2">
                        <label class="form-label fw-bold" for="statut">Catégorie</label>
                        <select class="form-select">
                            @foreach (var categorie in categorieUNSPSC) {
                                <option >@categorie.Categorie</option>
                            }
                           
                            <!-- 
                                LISTER LES CATÉGORIES DEPUIS FICHIER association_categorie_codes_final.xls PREMIER ONGLET "Liste des catégories"
                            -->
                        </select>
                    </div>
                </div>
                <div class="row">
                    <div class="col py-2">
                        <div class="overflow-auto card">
                            <!-- 
                                CECI EST EN GUISE DE TEST
                            -->
                            @for (int i = 0; i < 10; i++) {
                                <div class="row m-0 mb-1">
                                    <div class="col-auto p-0">
                                        <label for="" class="d-flex">
                                            <input type="checkbox"/>
                                            <span class="custom-checkbox" />
                                            <strong class="litteStrong">Test</strong>
                                            <strong class="litteStrong">Test</strong>
                                    </label>
                                </div>
                            </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col py-2">
                        <label for="details" class="form-label fw-bold" form="message">Détails et spécifications</label>
                        <InputTextArea id="message" oninput="countCharacters(this)" class="form-control" rows="6" placeholder="Entrez les détails ici..." style="resize: none;" @bind-Value="formModel.Message" />
                        <ValidationMessage For="@(() => formModel.Message)" />
                        <span style="display:none;" id="charCount">500 caractères restant</span>
                    </div>
                </div>
            </div>
            <div class="card-footer bg-bleuFonce">
                <div class="d-flex justify-content-center">
                    <button type="submit" class="btn bg-bleu text-white fw-bold" style="width: 200px;">
                        Suivant 
                        <i class="bi bi-arrow-right-circle"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
</EditForm>

<script>
    function countCharacters(textarea) {
        const maxLength = 500;
        const currentLength = textarea.value.length;
        const remaining = maxLength - currentLength;
        const charCountElement = document.getElementById("charCount");
        if (currentLength > 0) {
            charCountElement.style.display = "block";
            charCountElement.innerText = remaining < 0 
                ? "Limite dépassée de " + Math.abs(remaining) + " caractères" 
                : remaining + " caractères restants";
        } else {
            charCountElement.style.display = "none";
        }
    }
</script>

@code{
    private ModelValidation formModel = new ModelValidation();
    private List<Categorieunspsc> categorieUNSPSC = new List<Categorieunspsc>();
    protected override async Task OnInitializedAsync()
    {
        try
        {
            categorieUNSPSC = await _context.Categorieunspscs.ToListAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erreur lors de la récupération des personnes: {ex.Message}");
        }
    }

    public class ModelValidation
    {
        [Required(ErrorMessage = "Détails et spécifications requis")]
        [MaxLength(500, ErrorMessage = "Limite de 500 caractères maximum")]
        public string? Message { get; set; }
    }

     public void HandleValidSubmit() {

     }
}