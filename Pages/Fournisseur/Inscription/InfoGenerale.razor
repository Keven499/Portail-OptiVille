@page "/InfoGenerale"
@using System.ComponentModel.DataAnnotations
<PageTitle>Informations générales</PageTitle>

<EditForm Model="@identificationModel" OnValidSubmit="HandleValidSubmit">
<!-- OnValidSubmit="HandleValidSubmit" -->
    <div class="form-group container-fluid">
        <h3>Identification</h3>
        <div class="row">
            <div class="col-lg-12 col-xl-12">
                <label for="NEQ">NEQ</label>
                <InputNumber TValue="long?" @bind-Value="identificationModel.NEQ" class="form-control" id="NEQ" />
                <ValidationMessage For="@(() => identificationModel.NEQ)" />
            </div>
        </div>
    </div>

    <div class="form-group container-fluid">
        <div class="row">
            <div class="col-lg-12 col-xl-12">
                <label for="nomEntreprise">Nom de l'entreprise</label>
                <InputText id="nomEntreprise" @bind-Value="identificationModel.nomEntreprise" class="form-control" />
                <ValidationMessage For="@(() => identificationModel.nomEntreprise)" />               
            </div>
        </div>
    </div>

    <div class="form-group container-fluid">
        <div class="row">
            <div class="col-lg-12 col-xl-12">
                <label for="courrielEntreprise">Courriel de l'entreprise</label>
                <InputText type="email" id="courrielEntreprise" @bind-Value="identificationModel.courrielEntreprise" class="form-control" />
                <ValidationMessage For="@(() => identificationModel.courrielEntreprise)" />
            </div>
        </div>
    </div>

    <div class="form-group container-fluid">
        <div class="row">
            <div class="col-lg-12 col-xl-12">
                <label for="MotDePasse">Mot de passe</label>
                <InputText type="password" id="MotDePasse" @bind-Value="identificationModel.MotDePasse" class="form-control" />
                <ValidationMessage For="@(() => identificationModel.MotDePasse)" />
            </div>
        </div>
    </div>

    <div class="form-group container-fluid">
        <div class="row">
            <div class="col-lg-12 col-xl-12">
                <label for="ConfirmationMotDePasse">Confirmation du mot de passe</label>
                <InputText type="password" id="ConfirmationMotDePasse" @bind-Value="identificationModel.ConfirmationMotDePasse" class="form-control" />
                <ValidationMessage For="@(() => identificationModel.ConfirmationMotDePasse)" />
            </div>
        </div>
    </div>

    <div class="form-group container-fluid">
    <h3>Coordonnées</h3>
        
        <h4>Adresse</h4>
        <div class="row">
            <div class="col-lg-2 col-xl-2">
                <label for="No">No</label>
                <InputText @bind-Value="identificationModel.noEntreprise" class="form-control" id="No" />
                <ValidationMessage For="@(() => identificationModel.noEntreprise)" />
            </div>
            <div class="col-lg-7 col-xl-7">
                <label for="Rue">Rue</label>
                <InputText @bind-Value="identificationModel.rueEntreprise" class="form-control" id="Rue" />
                <ValidationMessage For="@(() => identificationModel.rueEntreprise)" />
            </div>
            <div class="col-lg-3 col-xl-3">
                <label for="Bureau">Bureau</label>
                <InputText @bind-Value="identificationModel.bureauEntreprise" class="form-control" id="Bureau" />
                <ValidationMessage For="@(() => identificationModel.bureauEntreprise)" />
            </div>
        </div>
    </div>

    <div class="form-group container-fluid">
        <div class="row">
            <div class="col-lg-12 col-xl-12">
                <label for="Ville">Ville</label>
                <InputText @bind-Value="identificationModel.villeEntreprise" class="form-control" id="Ville" />
                <ValidationMessage For="@(() => identificationModel.villeEntreprise)" />
            </div>
        </div>
    </div>

    <div class="form-group container-fluid">
        <div class="row">
            <div class="col-lg-6 col-xl-6">
                <label for="Province">Province</label>
                    <InputSelect class="form-control" id="Province" @bind-Value="identificationModel.provinceEntreprise">
                        <option value="" disabled selected>Veuillez choisir une province</option>
                        @foreach(string province in listeProvinces)
                        {
                            <option value="@province">@province</option>
                        }
                    </InputSelect>
            </div>
            
            <div class="col-lg-6 col-xl-6">
                <label for="CodePostal">Code Postal</label>
                <InputText @bind-Value="identificationModel.codePostalEntreprise" class="form-control" id="CodePostal" />
                <ValidationMessage For="@(() => identificationModel.codePostalEntreprise)" />
            </div>
        </div>
    </div>

    <div class="form-group container-fluid">
        <div class="row">
            <div class="col-lg-12 col-xl-12">
                <label for="RegionAdm">Région Admnistrative</label>
                <InputSelect id="RegionAdm" @bind-Value="identificationModel.regionAdmEntreprise" class="form-control">
                    <!--Il faut créer un option qui n'a aucune valeur en selected et en disabled pour éviter que lorsqu'on soumet que la valeur soit nulle-->
                    <option value="" disabled selected>Veuillez choisir une région administrative</option>
                    @foreach(string region in listeRegionADM)
                    {
                        <option value="@region">@region</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => identificationModel.regionAdmEntreprise)" />
            </div>
        </div>
    </div>

    <div class="form-group container-fluid">
        <div class="row">
            <div class="col-lg-12 col-xl-12">
                <label for="SiteWeb">Site Internet</label>
                <InputText @bind-Value="identificationModel.siteWebEntreprise" class="form-control" id="SiteWeb" />
            </div>
        </div>
    </div>

    <div class="form-group container-fluid">
        <div class="row">
            <div class="col-lg-2 col-xl-2">
                <label for="typeTel">Type</label>
                <InputSelect class="form-control" id="typeTel" @bind-Value="identificationModel.typeTelEntreprise">
                    <option value="" disabled selected>Veuillez choisir un type de téléphone</option>
                    @foreach(string type in listeTypeContact)
                    {
                        <option value="@type">@type</option>
                    }
                </InputSelect>
            </div>
            <div class="col-lg-7 col-xl-7">
                <label for="NoTel">Numéro de téléphone</label>
                <InputNumber TValue="long?" @bind-Value="identificationModel.noTelEntreprise" class="form-control" id="NoTel" />
                <ValidationMessage For="@(() => identificationModel.noTelEntreprise)" />
            </div>
            <div class="col-lg-3 col-xl-3">
                <label for="PosteCoordo">Poste</label>
                <InputNumber TValue="long?" @bind-Value="identificationModel.posteTelEntreprise" class="form-control" id="PosteCoordo" />
            </div>
        </div>
    </div>

    <div class="form-group container-fluid">
    <h3>Contacts</h3>
        <div class="row">
            <div class="col-lg-4 col-xl-4">
                <label for="Prenom">Prénom</label>
                <InputText @bind-Value="identificationModel.prenomContact" class="form-control" id="Prenom" />
                <ValidationMessage For="@(() => identificationModel.prenomContact)" />
            </div>
            <div class="col-lg-4 col-xl-4">
                <label for="Nom">Nom</label>
                <InputText @bind-Value="identificationModel.nomContact" class="form-control" id="Nom" />
                <ValidationMessage For="@(() => identificationModel.nomContact)" />
            </div>
            <div class="col-lg-4 col-xl-4">
                <label for="Fonction">Fonction</label>
                <InputText @bind-Value="identificationModel.fonctionContact" class="form-control" id="Fonction" />
                <ValidationMessage For="@(() => identificationModel.fonctionContact)" />
            </div>
        </div>
    </div>

    <div class="form-group container-fluid">
        <div class="row">
            <div class="col-lg-12 col-xl-12">
                <label for="Courriel">Adresse courriel</label>
                <InputText @bind-Value="identificationModel.courrielContact" class="form-control" id="Courriel" />
                <ValidationMessage For="@(() => identificationModel.fonctionContact)" />
            </div>
        </div>
    </div>

    <div class="form-group container-fluid">
        <div class="row">
            <div class="col-lg-2 col-xl-2">
                <label for="typeTel">Type</label>
                <InputSelect class="form-control" id="typeTel" @bind-Value="identificationModel.typeTelContact">
                    <option value="" disabled selected>Veuillez choisir un type de téléphone</option>
                    @foreach(string type in listeTypeContact)
                    {
                        <option value="@type">@type</option>
                    }
                </InputSelect>
            </div>
            <div class="col-lg-7 col-xl-7">
                <label for="NoTel">Numéro de téléphone</label>
                <InputNumber TValue="long?" @bind-Value="identificationModel.noTelContact" class="form-control" id="NoTel" />
                <ValidationMessage For="@(() => identificationModel.noTelContact)" />
            </div>
            <div class="col-lg-3 col-xl-3">
                <label for="PosteCoordo">Poste</label>
                <InputNumber TValue="long?" @bind-Value="identificationModel.posteTelContact" class="form-control" id="PosteCoordo" />
            </div>
        </div>
    </div>


    <div class="form-group container-fluid">
        <div class="row">
            <div class="col-lg-12 col-xl-12">
                <button type="submit">Suivant <i class="bi bi-arrow-right-circle-fill"></i></button>
            </div>
        </div>
    </div>
    <DataAnnotationsValidator />
</EditForm>

@code {
    private IdentificationModel identificationModel = new IdentificationModel();
    private List<string> listeProvinces = new List<string>{"Québec", "Ontario", "Manitoba", "Saskatchewan", "Alberta", "Colombie-Britanique",
        "Île-du-Prince-Édouard", "Nouveau-Brunswick", "Nouvelle-Écosse", "Terre-Neuve-et-Labrador", "Nunavut", "Territoires du Nord-Ouest", 
        "Yukon"};
    private List<string> listeRegionADM = new List<string>{"(01) Bas-Saint-Laurent", "(02) Saguenay-Lac-Saint-Jean", "(03) Capitale-Nationale", 
        "(04) Mauricie", "(05) Estrie", "(06) Montréal", "(07) Outaouais", "(08) Abitibi-Témiscamingue", "(09) Côte-Nord", "(10) Nord-du-Québec", 
        "(11) Gaspésie-Îles-de-la-Madeleine", "(12) Chaudière-Appalaches", "(13) Laval", "(14) Lanaudière", "(15) Laurentides", "(16) Montérégie", 
        "(17) Centre-du-Québec"};
    private List<string> listeTypeContact = new List<string>{"Bureau", "Télécopieur", "Cellulaire"};

    public void HandleValidSubmit()
    {
        Console.WriteLine("OnValidSubmit");

    }

    public class IdentificationModel
    {
#region identification
        [Range(1100000000, 8899999999, ErrorMessage = "Le NEQ doit contenir 10 caractères.")]
        public long? NEQ { get; set; }
        
        [Required(ErrorMessage = "Le nom de l'entreprise est requis")]
        [MaxLength(64, ErrorMessage = "Le nom de l'entreprise ne doit pas dépasser 64 caractères.")]
        public string? nomEntreprise { get; set; }

        [Required(ErrorMessage = "Le courriel est requis")]
        [MaxLength(64, ErrorMessage = "Le courriel ne doit pas dépasser 64 caractères.")]
        public string? courrielEntreprise { get; set; }

        [Required(ErrorMessage = "Le mot de passe est requis")]
        [Length(7,12, ErrorMessage = "Le mot de passe doit contenir entre 7 et 12 caractères.")]
        [RegularExpression("^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&]).+$", ErrorMessage = "Le mot de passe doit contenir au moins une majuscule, une minuscule, un chiffre, et un caractère spécial (@$!%*?&).")]
        public string? MotDePasse { get; set; }

        [Required(ErrorMessage = "La confirmation du mot de passe est requise.")]
        [Length(7,12, ErrorMessage = "Le mot de passe doit contenir entre 7 et 12 caractères.")]
        [RegularExpression("^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&]).+$", ErrorMessage = "Le mot de passe doit contenir au moins une majuscule, une minuscule, un chiffre, et un caractère spécial (@$!%*?&).")]
        [Compare(nameof(MotDePasse), ErrorMessage = "Les mots de passe ne correspondent pas.")]
        public string? ConfirmationMotDePasse { get; set; }
#endregion
#region coordonnees
        [Required(ErrorMessage = "Le numéro est requis")]
        [MaxLength(8, ErrorMessage = "Le numéro de la rue ne peut pas dépasser 8 caractères")]
        public string? noEntreprise { get; set; }

        [Required(ErrorMessage = "Le nom de la rue est requis")]
        [MaxLength(64, ErrorMessage = "Le nom de la rue ne peut pas dépasser 64 caractères")]
        public string? rueEntreprise { get; set; }

        [MaxLength(8, ErrorMessage = "Le numéro de bureau ne peut pas dépasser 8 caractères")]
        public string? bureauEntreprise { get; set; }

        [Required(ErrorMessage = "Le nom de la ville est requis")]
        [MaxLength(64, ErrorMessage = "Le nom de la ville ne peut pas dépasser 64 caractères")]
        public string? villeEntreprise { get; set; }

        [Required(ErrorMessage = "La province est requise")]
        public string? provinceEntreprise { get; set; }

        [Required(ErrorMessage = "Le code postal est requis")]
        [RegularExpression("^(?!.*[DFIOQU])[A-VXY][0-9][A-Z] ?[0-9][A-Z][0-9]$", ErrorMessage = "Le code postal n'est pas valide")]
        [MaxLength(6, ErrorMessage = "Le code postal ne peut pas dépasser 6 caractères")]

        public string? codePostalEntreprise { get; set; }

        [Required(ErrorMessage = "Le numéro du code de la région est requis")]
        [MaxLength(2, ErrorMessage = "Le code de la région ne peut pas dépasser 2 caractères")]
        public int? codeAdmEntreprise { get; set; }

        [Required(ErrorMessage = "La région administrative est requise")]
        public string? regionAdmEntreprise { get; set; }

        [MaxLength(64, ErrorMessage = "Le site Internet ne peut pas dépasser 64 caractères")]
        public string? siteWebEntreprise { get; set; }

        [Required(ErrorMessage = "Le type de numéro de téléphone est requis")]
        public string? typeTelEntreprise { get; set; }

        [Required(ErrorMessage = "Le numéro de téléphone est requis")]
        [Range(1000000000, 9999999999, ErrorMessage = "Le numéro de téléphone n'est pas valide")]
        public long? noTelEntreprise { get; set; }

        [Range(000000, 999999, ErrorMessage = "Le numéro de poste n'est pas valide")]
        public long? posteTelEntreprise { get; set; }
#endregion
#region contact
        [Required(ErrorMessage = "Le prénom est requis")]
        [MaxLength(32, ErrorMessage = "La prénom ne doit pas dépasser 32 caractères.")]
        [RegularExpression("^[a-zA-Z'-]+$", ErrorMessage = "Le prénom n'est pas valide")]
        public string? prenomContact { get; set; }

        [Required(ErrorMessage = "Le nom est requis")]
        [MaxLength(32, ErrorMessage = "La nom ne doit pas dépasser 32 caractères.")]
        [RegularExpression("^[a-zA-Z'-]+$", ErrorMessage = "Le nom n'est pas valide")]
        public string? nomContact { get; set; }

        [Required(ErrorMessage = "La fonction est requise")]
        [MaxLength(32, ErrorMessage = "La fonction ne doit pas dépasser 32 caractères.")]
        public string? fonctionContact { get; set; }

        [Required(ErrorMessage = "Le courriel est requis")]
        [MaxLength(64, ErrorMessage = "Le courriel ne doit pas dépasser 64 caractères.")]
        public string? courrielContact { get; set; }

        [Required(ErrorMessage = "Le type de téléphone est requis")]
        public string? typeTelContact { get; set; }

        [Required(ErrorMessage = "Le numéro de téléphone est requis")]
        [Range(1000000000, 9999999999, ErrorMessage = "Le numéro de téléphone n'est pas valide")]
        public long? noTelContact { get; set; }

        [Range(000000, 999999, ErrorMessage = "Le numéro de poste n'est pas valide")]
        public long? posteTelContact { get; set; }
#endregion

    }
}